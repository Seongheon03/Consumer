<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMTEhUTExMVFhUWFxoaFhUYGBgYGxoaFxoYGhoaHxga
        HSgiHR8mGxkXIjEhJSkrLy4uFx81ODMsNygtLiv/2wBDAQoKCg4NDhsQEBsvJiAmLS0tLS0tLS0tLS8t
        LS0tLS0vLS0tLS0tLy0vLS0tLS0tLS0tLS0tLS0tLy0tLS0tLS3/wAARCADFAP8DAREAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAcBAgMEBgUI/8QAPhAAAQMBBQUGBAUDAwQDAAAAAQACAxEEITFBUQUG
        EmHwB3GBkaGxEyIy0UJiweHxFCNSM6LCgpKy4hZTcv/EABsBAQACAwEBAAAAAAAAAAAAAAABBAMFBgIH
        /8QAMhEAAgECBAMGBgMAAwEAAAAAAAECAxEEBSExEkFRYXGx0eHwEyIygZHBI0KhFBViUv/aAAwDAQAC
        EQMRAD8AnFAEBqbSsDZmcLuIZhzSQ4HUH9MF5lFSRKdjnrLPLYpC2c8ULzRslbq5VGR5ZrAnKm9djI7T
        Wh1MUocA5pBBwINQVYTT1RiL1ICAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIDDa7M2
        RjmPFWuFCFDSasyU7HESz2jZ8lL3QnDQjlmCqvzU2ZtJo6vY+2orQ2rDfm04j7rPCopGKUWj0lkPIQBA
        EAQBAEBjmnawVc5rRq4gDzKhtLc9RhKTtFXLbPao3/Q9rqY8Lg72RST2ZM6c4fUmu8zKTwEAQBAEAQBA
        EAQBAEAQBAEAQBAEAQBAEAQGC12VkjSx4qD1UaFRKKasyU7HDbX2E6zu42lwbW6VuLcacQ6HdVVJ03DU
        zRnxHo7L3mewhlpvabmztFx5OGR9e/Fe4Vmvq/JEodDrIpA4AtIIOBCsJ3MJepAQBAEB4O9W88VjZVxD
        pHf6cevM6N5rFUqqHeXsDgKmKlp9K3fvmQztbbEtpeZJnlxxAyaNAMhRUZNyd2dnh8NToR4YK3j9yyw2
        ySJwdG8scMHNNM/avgo22MlSnCpHhmrolzc7fBlqAjko2YDDAPGo56t6FylW4tHuchmOWSw744ax8PfU
        6tWDUhAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEBQhAc5tPdygc6Cgr9URva4aX3eBu7lXnR5xMsanJnh
        WC3vs7+FnE0g/PA6pF+bScPHzyWJTcWe3FNHZ7N2myYfKaOGLTiFahUUjDKLRvL2eQgOX3z3wjsTeAUf
        O4VZHW4ZBztBXLE+ZGGrV4NFubLL8unind6RW7/S96EJ7S2g+eR0sjy57jUkn07sAAFSvc7KlSjSgoQV
        kjDXLH3p0EMhdG+79eu84qCOZtxTlpDmkgi8EGhBrcRS8HC9GGlJWZK25W+ompBOQJbg1+AfyOjq+BVq
        lXv8sjlMyyp0r1aX08109PA7dWjRhAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQGhtXZMc7aPF4+l4+p
        vcf0XicFLc9Rk0cTtSKSySAE1OLH1xAuvrhpnlTRVZRcGZ01JHrf/MeFreJgP+RrSvMBZPjtcjwqSZh3
        u37ZZ4miK+eRoIaR/phwFC8a33Nz7kqV7Ky38DYZflksRLin9C/3u8yGLZanSPdI9xc9xJc5xqSTn+3J
        VdzsIRjCKjFWS5FjHVQll7R4HXrxQXLozXv6P2Qhsu7vshNzKJTj4deqixN0SbuRvzXhgtTr8GSn0a4+
        gd56qxSrW0kc1meU71aC715eRIoKuHOFUAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAcd2gWGUtbNFGJ
        RGCXNzoKnCoJFCcDVYKsXuZqbWxwWy9oRvJ+FxBwxafqGrXi4H/9DTJV32GZxcdzPHsKzWqR4c6SGV17
        Tc5rnHHiBF57iKr1Tpqej3L9HNq2Hio2TX+/Z+hxu1bE+CV8Mgo9jqGmGoI5EUI71ilFxbTOnoVo1qaq
        Q2ZrA1UGQuN+PX7XoDJxdeuXggKgiuuv3qguXg659fqEBkZIBzHX2CCxIO5G+3wuGC0OJiuDZMSzAUdq
        2ueXcs1Ktw6PY0WY5V8S9Skvm5rr6+JKMbwQCCCCKgi8EHMFXE76o5dpp2ZcpICAIAgCAIAgCAIAgCAI
        AgCAIAgCAIAgCAjbtA7QBHxWayuBfeJJReGatbq7InLvwqVa39Ym/wAtylztVrLTkuva+zx7iPt3bbGz
        4jZLuMVbJWnC5tcXE51PkvFOSSaZbzjCSnwzprbRkhbJhjhbJJJJEI3NFHcVaXgk1IFK4XHPO5WYU1DV
        s5t8VR8MU7kd71bWbabVJM0UYaBtbiWsAbUjnT2VWrLik2jssuw8sPh1CW+7+55tns7nvaxjS5zjRrQL
        ye7z8ljs3sW5zjCLnJ2S5nYQdmNuc2p+E2o+lzzUd9AaeqzrDyNRLPMMnZKT+y/b8jxttbt2qyH+9GQ0
        4PHzNPjl40WOUJR3L2Gx1DEaU3r0ej99x44N/XWa8lwvDrurvFQDIynhn0e5BcyRn90PR2W5e+TrMRHI
        S6A4jExk5t5ajy55KdVw05GozHK44hccNJePf5ku2a0MkaHscHNcKhwvBV5NNXRyE4ShJxkrNGVSeQgC
        AIAgCAIAgCAIAgCAIAgCAIAgKEoCJ+0PtDrxWaxvuvEk4z1aw6au8tVTq1uLSOx0mW5Va1Wsu5ft+RGQ
        k/hYDoUXVH7ISUaQgKilf0UkEo9i1kYfjykVkaWsFfwhwqaaVP8A4qzh1uzms+qS44U+Vr/e9v8AP2SJ
        tzarLLA+eQOLGCpDRUmpAAFSMyFYlJJXZo6NKVWapw3Z5G7+9Nk2i18bQa0+aKQCpbhUUJBHsvMZxmtD
        NXwtbCyXGrdGv0yOt/8Acr+kPxoQTA40IxMbjgK/4k4eSrVaXDqtjo8rzN1/46n1devqcb115LAbgvAw
        69/FBcrh11qhJlY6iA6bdLemSxvpe6In5oz7trg73zyp7hNwd0Ucdl9PFR6S5Pz7PAmLZe0o7RGJInBz
        T5g6EZEaK9Gakro42vQqUJuFRWZuL0YQgCAIAgCAIAgCAIAgCAIAgCAo40QENdoe/wCZ+KzWZ1IcHyC4
        ycgcmf8Al3Y0qtXi0Wx1WW5WqVqtVfNyXT18O8js6LCboEICtEFzNZoS9zWN+p7mtHe4gBSlfQidRQg5
        vZJv8E37S7ObLJZmQsHBJG2jJgLycSXD8QJrdzuVyVGLVjjqOa16dV1G7p7rl9uhxe6VqfsraBs9ooGy
        AMeQRwitTHJyFTS/AO5LFTbhPhZsswUMbhliKX9d1z7fxv3Ev7QsbJo3xSCrHtLXDkVaaurM52E5Qkpx
        3WpEm7ezW7O2sGWmTgaGu+E8ghr+O5tXYC6uOYVanHgqWZ0WOxP/AC8Epwjz+b/zb9PwJT2/Z2SWaZkl
        OAxvryHCTXwxViSummaCjOUKkZR3TVj5xYbgdcfTz60WuR9Ae5mDbqnS/rvKki4J667vZQSV7jU4H29q
        qSS/oepUC57u7m8Mtkk42GrT9TDg4DI6Gmf7r1GTi7oq4vB08TDhl9n099CZthbaitUYfGb/AMTD9TTo
        R+qu06imtDjMVhKmGnwz+z5M9JZCsEAQBAEAQBAEAQBAEAQBAEB4O/TnjZ9qLK8XwnYafi/21WKv9DLm
        XqLxVNS2uj51eFQO4ZYpIKnBCQ3l5IGbFlnMT2SNvLHtcO9pqPZSnZ3MVaHxKcodU1+UfSuyNpR2iFk0
        Rqx4qOWoPMGo8FsU01dHBThKEnGSs0QX2jWGSO3zmVppI7jY7JzaZHkBSnJUaqam7nY5TUhLDRUOWjXb
        6kqdmG0pJ7Awy1JY50YcfxNbgfDD/pVulLijdnNZjQjQxEoQ237r8vfI0u1zZLZLH8anzwkGurHENcO6
        pB8F4rxvG5Zyau6eI4OUtPvuvL7kZw72WoWV9kMnFE6gBN7mtzYHf4nQ4ZXLB8WXDwm7/wCroquq0dLa
        25X5P0PJBu69vNYjZFRd4/v+yAq41NBf1+yknkVLud3Lld+pQgNN3h+6EmUHuyHjh970CZ6mxtsSWeQS
        ROo7PRw0La4GoRNxd0Yq+Hp14OE1oTLuzvJFa2VaeGQD5oziMqjUc1dp1VPvONx2AqYWWuseT98z21lK
        IQBAEAQBAEAQBAEAQBAEBbIwOBBAIIoQcCDiEauSm07ohLtA3CdZSZ4AXWfEjExd+reeWeqoVaThqtjq
        8vzNV1wVNJePqcJesRtgSpPQFyAu4UIOn3K3vksD6UL4Hmr464fmZo7lgfUZaVXh0exqsxy1YhccNJ+P
        f+n+eyaLDbLHb4g5vw5maOAJadC03tKufLJdTlmqlCbTvF/g9WCFrGhrGhrRg0AADwC9GNtt3ZGvapvZ
        GYzY4XB7nEfGcLw0A1Da5kkCtMPFV681bhRusnwcpVPjy+lbdr9CLo2EnhAJOAaBUnK4DuKqnUNpK7Ov
        2F2eWyehe34Eer73eDBf50WWNCT30NViM5oU9IfM+zRfnyJD2F2fWOz0c5pmePxSXjwZgFYjRjE0WIzT
        EVtL2XRaep52/W4TZwZrMA2YXuYKBr/s5ealG+q3M+XZpKh/HU1j/q9Oz8ERysc1xa4EOFxaQa1GVFUs
        dXGUZLii7p8xXP265KCStdOuipJMnxc8SevLDzUhLkbtgt8kL2vjdwObeCMdPG4YHGqdqPM6cKsXCaum
        TBufvdHa2hjqMmAvbk7m37YhWqVbi0e5yGYZbLDPijrDr07/ADOoWc1YQBAEAQBAEAQBAEAQBAEBa9oI
        oRUHEINiIe0Ds8MXFaLI0mPF8IvLNS0Zt/LiMrsKVWjw6x2Oly7NeO1Os9eT69/b2kbgKub0UUnoqDqh
        AcUBls8jmEOY9zHDBzHFp820UptbGKrRp1VapFPvPasls2hbD8Fstpmri34jqU/NfSl4xWVTqS0RRnhc
        BhvnnFLvu/8ANfA7DYHZS80dapQ0f/XHefFxFPILJHDv+zKOIzzlQj935Lz+xIWxd3LNZRSGJrTm7Fx7
        3G9WIwjHZGkr4mrXd6kr+H2Ww27vHZrI2s0gBpcwXvd3NHuaDmplJR1Z5pUalaXDTV2eDuvvXNtC0H4U
        fwrNEPmc6973Goa3RupxN2N6xwqcb02LeKwP/FgviS+Z8lyXa/8AP2dTta3sghkmf9MbS486YDvJoPFZ
        G7K5Sp05VJqEd3ofOlut7ppXzSfXI4uPia0HIAAeC18m27neUaMaNONOOy93+71MLjdTwPp+/VUMpe01
        7+vuPVQCpOXXL2QFWmmfj13oLmxBaXMcHNJBBqCCQbjUEZpYlpSVpEtblb6ttFIZiBKLg7ASfZ3v6K1S
        rX+WRyuZZU6P8lL6enT0O1Vg0gQBAEAQBAEAQBAEAQBAEBRARnv/ANnvHxWixto7GSEfi1cwZHVueV+N
        SrQ/tE32XZrw2p1npyfn5+1FDo6Eg92mF2B7lVOjTMdMEJuVCkkNdRAbezNpSQSCWF5Y9pqHD1BGYOhX
        qM3F3RhxGGp4iHBUXmu4mDZHadZXQF9oPw5WgcUbQXcZIxZyOhw9TdjWi1dnJ1srxEKnBGPF0a2+/Q3N
        1+0Cz2yQxFphef8ATDyDxjkRcHfl9TephVjLRHjFZfWwyUp6rquXeYd+9xm2us0NGWgC84CQDAO50AoV
        5q0uLVbmbLsylhnwS1g/yu1eR7u6ew22OzMhFC7GR3+Tz9R/QcgFkhHhVipi8Q8RVdR89uxckcP2wbc+
        iyMOFJJf+APjf/2rDXl/VG2yTDXk60uWi7+f+eJGJIPlh+qrHSo6PdDdKa3Eub/bibX+4RUF2QAGJBx0
        WSFNzNdjsxhhfl3l07O39Hmbb2TLZZTFK2jheNHDUHMYfqvEouLsy1hsTTxEOOD813mm091PHyrrcesI
        M5cHV8MNDj5m/wBEBUkd46+38oNS9ktKX48/f1vRoIk/cnfwOpBaXX4NlPs8/wDLz1WenWtpI57Msote
        rQXfHy8vwSKCrRzhVAEAQBAEAQBAEAQBAEAQBAcJv5uE208U8ADJ8XNwbL36O5556itWoX+aO5t8vzN0
        f46msfD0IatELmOcx4LXNNHNIoQRiCDmqZ1EZKSUk9DBipPZQBD0XMUguHXXmgLmuw5YcqX1Hpf3IjzK
        KknFrRk5dmW17TabKXWgAhruGOX8UgGNRqDdxZ+FTepSco3ZxmY4anh6zhTfbbpfkdNtS3MgifM80bG0
        uPhl3k3eKyN2V2UoQlOSjHd6HzhtK2vtEz5pK8Uji4jvwA7gAByCoNtu53mHoqhSjTjy9t/k6jcXch9s
        Iklqyzg44F/Jp0xqfJZKdLi1exrsxzNUPkp6z8PXs/PRzXZLKyJjY42hrGijWi4AK2lY5SUnJuUndsj/
        ALVduWXg/pixss9a1r/o8yRmR+Hz54a0o2s9zbZPQryq/Eg7RW769nvbfcibKvXV6qnWIqHXV8x49/cg
        ZeeWt3sfNSQALqaeHj7eSHouik6/nwUC5IO42/JipBOaxYNdiY+RObfUeiy06jjo9jS5llSq3qUvq5rr
        6kqxShwDmkFpFQQagg4EFW076o5WUXF2a1L1JAQBAEAQBAEAQBAEAQBAEByO/G5TLa3jZRloaPldk8ZN
        f+hxHMXLBVoqeq3NlgMwlhnwvWPTp2ohDaNhkhe6OVhY9pvacRz0IzBzVHVaM62lUjUipQd0zVKkyINO
        XWSkkvIz69e9CAXd/X8ICUOzbfxgayx2jhZw0bFIAGtOjXUuB0dnnfebdGqrKLOXzTLpwk60dU9X1Xp4
        F/bJt6gZY2nGkkvcK8DfMV8AleX9Ue8jw3FN1ny0Xfz/AAvE8rcDcN1opPaAWwYsZgZeeob7rxSpX1ex
        azLNfh3pUvq5vp3dvh37THFGGgNaAABQACgAGVFbOXbvqzgN/wDf4QcVmspDpsHyC8R8hkX+3osNSrw6
        Lc2uXZa8Q+OekPHu8/aiJ7iSSXEkm8m8k5k5333qpudZCMYpRirJFQTXr9e9D0VpfrflWnL2QXLTocq+
        Hf41UgB3XWCC5Xuxx68ihNzJxXc7r77kJudjuXvk+yO+HIS6A/hzbXNvnhhcvcKjg+w1mYZdDErijpLr
        17/MmGw21kzGyRuDmOFQR1ceStxkpK6OQqU5U5OE1Zo2F6PAQBAEAQBAEAQBAEAQBAEBz+926kNujo4B
        srR/blpe06HVvLyWKrSU12l3B42phpabPde+ZBO3NkTWWV0UzOFw/wC1wyc00oRd/CoNOLszr8PXhXgp
        wd173POQzleIBSCjsr+sEBbjzQHQbqWqzG1sfb+N8dwDiagOFAzjzLQBgNBkssHFy+c1mOp1aeH4cMrL
        W9t7c7e79D6Ghc0tBaQWkDhIwplSmVFeOPOH7VNv2mzQtbAxzWvqHzj8P5RoT/l5XrFVm4rQ2eV4WniK
        tqj25dfTrzIW9fHHvCpnYJJKyK1yPWqArxXdYdUQHXbj7mvtpD31ZZ2n5nZvp+FtfU5LLTpcWr2NVmGY
        xw64Iaz8O/y/Pbsb87jvshM0PE+z+JdHyOrfzeampT4dVseMuzNV/wCOppLx9ez8HGv/AIwz7u4LEbdF
        GaHly6wQkqHeB116r6IC8PP8cq/ZAdLuhvNLZJPlvjd9cZNAaUvGjufmpjNxd0VMbgqeKhaWjWz98iaN
        j7WitMYkidUZjNp0IyKuQmpK6OOxGGqYefBUXr3G8vZgCAIAgCAIAgCAIAgCAIAgPI3l3ehtsRjlF4vY
        8fUw6g+4wKx1KamrMs4XFVMPPih91yZBG8u7k1ilMcoqCfkeK8LxqOeoxHqqEouDszsMLi6eJhxQ+65r
        31PH4eu/+FBZuWu1UkoocOigAepB2m4u/j7GRFLV9mJwxdHXEt1bfe3xGhz063DozR5hlSqXqUvq5rr6
        +PeTS10NphqOCWGRvJzXNKtaNHNJyhK60a/KZDe/m4brJWaAF9nOIvLo+/VuN+Sq1KXDqtjqcuzRV7U6
        ukuvX18Tiq34X6V8vdYTcHc7gbiOtVJpwW2cGrRgZf8A0555arNTpcWr2NLmWaKlenS+rm+nr4E0WeBr
        GhjGhrWijWgUAAyorZy7bbuzXit8Er5IWyMe9l0kYIJbXUKLolxaSdu4jDfrs/MVbRZGkx4vhF5bmS3V
        v5VXqUrao6HL814rUq715S8/P8kdU9QsBvwHXdd/2QF11fG7z/aniguZWOoOevXf6lAdd2fbSfFa4wCe
        GQhrm6hxu8iQfAqYS4ZJopZnRjVw0m91qvsTWr5xQQBAEAQBAEAQBAEAQBAEAQGhtvY8VqiMUzeJpw1a
        cnA5FeJwUlZmWhXnRnxwdmQVvhulNYX/ADfPE40ZKBceThk7lnlyozg4OzOuwWPhiY6aS5ry7Dm6LyXr
        lDjehNyhKAqDp1mpB0m5u98tgfQVfCT88Nf9zK4O9DnqstOq46PY1eYZdHELjjpPx7/M7HfftLY6L4Vi
        JJkb88pFOAEXtAI+rU5c8stSsrWiavA5TOpPirKyXLm/Tt58upo9nvZ6ZeG02ppEdxjiNxfmC7RvLPuX
        mnSvrItZjmvDelRevN/pef4JgY0AAAUAuAGACtHNmvaWiaJzWSFvEHNEjCCWm8VBwqD7IyU7O5A+2tlW
        vZdpDw5wdUmOZuDxiQa43YtOKptSpyOupTw+Po8FrW5c493vvJV3J31jtzeB1I7Q0VdHk4f5MriOWI9V
        ZhNSOcxmCqYaVpark+vqcr2o7sQQj+picyNzzQwm4SOObQMDfU5LFVglqjaZTjqjkqMrtcn07+zwI0af
        e4KudEXVv5jnohCMsY7/ANtPVQSkSR2a7tPc9lqkHDGypjri914qPyj1WSjByd+Rps3x0YwdCL1e/YvM
        lNXTlggCAIAgCAIAgCAIAgCAIAgCA17dYo5mOjlYHscKFpFR1zUSipKzPUJyhJSi7NEHb97jyWImSOr7
        OTc/FzNGv/R3640alJwfYdXgMxjiFwy0l493kcdXVYzaB2CkBnXXggLeuvVCTd2RbhDKyV0bZAw14Hir
        Xcj14FeouzuyviaUqtNwjKzfM+h92d4oLbF8SF2Fz2H6mHQj2OBV6MlJXRxVahOjPgmrM8ntLdbRZT/S
        YX/FLa/EDPyU9aX0wXmo5JfKWMvjQlWSr7cul+3sIo3N3wlsL/lq6Fx/uRE/7mk4OpTvVenUce46DHZb
        HELihpL/AB9/6ZNTH2TadlqKSxPHc5p92uCtaSRzKdXDVdNJL376kJb07L/obWWRT8TmHia5ho9hrdxU
        wdf1VVJLglodVha0cbQfxI9j6fb3oeftjbE1qk+LPIXOoAMgAMgBcAbj3qJScndljC4Snh48MF3vmzUB
        HXXVV5LBdGCTqT74+6HpIkrs/wBxS+k9pbSPFkRxfnVwybyxPdjkp0nLV7eJo8yzRQvSovXm+nd2krMa
        AKAUAwAVxaHMt31ZVCAgCAIAgCAIAgCAIAgCAIAgCAICyWIOBa4AtIoQRUEHEEKGrkptO6Ib3/7PTBxT
        2UF0OL48XR6kas9R3XinVpcOq2Oky/M/iWp1X83J9fXx7948osJu7lH1Ht16qSS0oCo668FJBv7F2tLZ
        ZhNA/heLiMiLqtcBiF6jJxd0VsVhaeIhwz+z5onjcze+G3x1b8krQPiRE3j8w1bz81chNSWhyOKws8PP
        hn9nyZzHaD2eCXitNkbSTF8WAfqW6O5ZrFVpX1ibHL80dK1Or9PJ9PTwIx2Rty02Rz/gvdG5wLHj0vac
        HA1oclhjNx2N5iMHRxNnP8rp5e0aLpCbySSTU31NTfX1XksxioqyWiLmEeV/h/FPNCdTI0Vpib8BnXlz
        RnpIlncPcAN4bRa2/N9TIT+HRzxm7llnfhlpUb/NL8HO5jmt70qD05vy8ySVbOfCAIAgCAIAgCAIAgCA
        IAgCAIAgCAIAgKEICLt/uzutbRYmUOMkAz1cwe7fK+41KtG2sTfZfmlv46z7n5+ZFLxrdr7e9VgR0CMR
        HWqHoqbs69U/RSCnj9kIM9htr4ZGyxOLJGmrXDEfcHCmd6lNxd0Y61CFaHBNXRK1k7Wo/wClJkjP9U35
        QwXMeTWj65NuvGOmos/HXDfmc3LJ6yrcC+n/AOuzt7ewivam0ZLRK6WV3E95qSBQd1MgMPBV5S4ndnSU
        KMaNNU47IwMNft6qDMbNjgdI4MY0ue4gNAvJJOnmobIk1FcUnZEz7hbhtswE1oDXT4tbi2P7u55ZamzS
        pc5HMZjmjrfx0tI8+30O7Vg0wQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEBH/aB2fttPFaLMA2fFzMB
        L9n88DnqK9WjfWJt8vzJ0v46n0+HoQvPC5jix4LXNJDgRQgg3gg4YKqdPGSkrrYxGuCkktogLh4H9v4w
        Qkqe7RAAB1chJu7L2ZJNI2KJpe9xFGge5wAuJqh4qVY04uc3ZInLcjcqOxN430ktBHzPyaDi1mg1OJ5Y
        K1SpcOr3OUx+YyxL4Y6R6de1nWrOawIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgOQ353IjtzeNn
        Cy0AXPpc8D8L/wBHYjmLlhq0uLVbmxwOYSw74Zax6dO4gzalgkgldFKwskabwffmDkRiqm251VOpGpFS
        g7pmqTRDIW1v/n9EJL2m7+L7j54hBY9LYGw5rXMIoGVOJODWiuLjkPVEm3ZGOviKdCHHN+vcTzujurDY
        Y+FnzSOH9yU4u5DRvL3VynSUO85DG46eJld6LkvfM6BZSkEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQB
        AEAQBAEBz2+G6cNujo/5ZWj+3KBe3kf8m8vKixVKamu0uYPGzw0rrVc175kC7e2HNZJfhTs4TiD+Fwwq
        12Y6ICptNOzOtoV4V48dN6f6u886l3Xt4qDOkdBujupNbpOFg4YwfnlP0tGNObsLl6jFydkVsXjKeFje
        Wr5Lr6E8bvbBhscQihbQYucb3PP+TjmfQZK7CmoLQ5DE4mpiJ8c35I9ReyuEAQBAEAQBAEAQBAEAQBAE
        AQBAEAQBAEAQBAEAQBAEAQBAaG2NjwWpnw54w9uIrUEHUOF4PcvE4RmrMzUMRUoS4qbszmG9l1g4qkSk
        f4mQ09BX1WP/AI8e02H/AHWJtbT8HWbOsEUEYihY1jG4NaKDv5nmVljFRVka2rVnVlxTd2bS9GMIAgCA
        IAgCAID/2Q==
</value>
  </data>
</root>